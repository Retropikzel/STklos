#  General variables which depends of the choices made when configure was run
# (compiler used, compilation flags, ...) 
CC=@CC@
CFLAGS=@CFLAGS@
CPPFLAGS=@CPPFLAGS@
LD=@SH_LOADER@
LDFLAGS=@LDFLAGS@
SH_COMP_FLAGS=@SH_COMP_FLAGS@
SH_LOADER=@SH_LOADER@
SH_LOAD_FLAGS=@SH_LOAD_FLAGS@ 
SO=@SH_SUFFIX@
STKCFLAGS=@STKCFLAGS@

# ----------------------------------------------------------------------------

# STKLOS_SRC is the directory with the C source of STklos.
# Since this example is in 'examples/c-module', then the
# 'src' subdir is this:
STKLOS_SRC=../../src/

# The following variables are:
# SCHEME_SOURCE -- the Scheme part of the module
# C_INCL        -- C file to be included (generated by stklos-compile)
# C_SOURCE      -- C module source, written by the user
# C_OBJ         -- C object file (intermediate)
# SHARED_OBJ    -- C shared object (loadable library)

SCHEME_SOURCE=string-obfuscate.stk
C_INCL=string-obfuscate-incl.c
C_SOURCE=string-obfuscate.c
C_OBJ=string-obfuscate.o
SHARED_OBJ=string-obfuscate.$(SO)

# Instead of making a compact Makefile that uses wildcards and variable names,
# we opted for using the filenames in the Maefile rule heads, and the
# variables above in the rule bodies. This could, perhaps, make it somewhat
# easier for beginners to understand the file.

all: $(SHARED_OBJ)

# We first compile the Scheme file string-obfuscate.stk into a C file
# string-obfuscate-incl.c, so it will be included in the library C file
# later:
string-obfuscate-incl.c: $(SCHEME_SOURCE) $(C_INCL)
	stklos-compile --no-time \
	-C \
	--output=$(C_INCL) \
	$(SCHEME_SOURCE)

# Now we compile the C library, which will include string-obfuscate-incl.c.
# The compiler flags are:
# -fpic is of course necessary
# -nostdlib, becaues STklos is already linked against libc
# -c compile only, don't link
string-obfuscate.o: $(C_SOURCE) $(C_INCL)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(STKCFLAGS) $(SH_COMP_FLAGS) \
	-I$(STKLOS_SRC) \
	-c \
	-o $(C_OBJ) \
	$(C_SOURCE)

# And finally, we make it a shared library so STklos will be
# able to load it:
string-obfuscate.so: $(C_OBJ)
	$(LD) $(LDFLAGS) $(SH_LOAD_FLAGS) -o $(SHARED_OBJ) $(C_OBJ)

clean:
	rm -f \
	string-obfuscate-incl.c \
	string-obfuscate-incl.o \
	string-obfuscate.o \
	string-obfuscate.so

dist-clean: clean
	rm -f Makefile
