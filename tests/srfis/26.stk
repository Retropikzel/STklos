;;;; 26.stk

(test "cute.0"  '()
      ((cut list)))
(test "cute.1"  '()
      ((cut list <...>)))
(test "cute.2"  '(1)
      ((cut list 1)))
(test "cute.3"  '(1)
      ((cut list <>) 1))
(test "cute.4"  '(1)
      ((cut list <...>) 1))
(test "cute.5"  '(1 2)
      ((cut list 1 2)))
(test "cute.6"  '(1 2)
      ((cut list 1 <>) 2))
(test "cute.7"  '(1 2)
      ((cut list 1 <...>) 2))
(test "cute.8"  '(1 2 3 4)
      ((cut list 1 <...>) 2 3 4))
(test "cute.9"  '(1 2 3 4)
      ((cut list 1 <> 3 <>) 2 4))
(test "cute.10"  '(1 2 3 4 5 6)
      ((cut list 1 <> 3 <...>) 2 4 5 6))
(test "cute.11"  '(ok)
      (let* ((x 'wrong) (y (cut list x))) (set! x 'ok) (y)))
(test "cute.12"
      2
      (let ((a 0))
        (map (cut + (begin (set! a (+ a 1)) a) <>) '(1 2))
        a))

(test "cute.0" '()
      ((cute list)))
(test "cute.1" '()
      ((cute list <...>)))
(test "cute.2" '(1)
      ((cute list 1)))
(test "cute.3" '(1)
      ((cute list <>) 1))
(test "cute.4" '(1)
      ((cute list <...>) 1))
(test "cute.5" '(1 2)
      ((cute list 1 2)))
(test "cute.6" '(1 2)
      ((cute list 1 <>) 2))
(test "cute.7" '(1 2)
      ((cute list 1 <...>) 2))
(test "cute.8" '(1 2 3 4)
      ((cute list 1 <...>) 2 3 4))
(test "cute.9" '(1 2 3 4)
      ((cute list 1 <> 3 <>) 2 4))
(test "cute.10" '(1 2 3 4 5 6)
      ((cute list 1 <> 3 <...>) 2 4 5 6))
(test "cute.11"  1
      (let ((a 0))
        (map (cute + (begin (set! a (+ a 1)) a) <>)
	         '(1 2))
        a))
