;;;; srfi-61.stk         -- Implementattion of SRFI-61
;;;;
;;;; Copyright Â© 2020 Erick Gallesio - I3S-CNRS/Polytech Nice-Sophia <eg@unice.fr>
;;;;
;;;;
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2 of the License, or
;;;; (at your option) any later version.
;;;;
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;;
;;;; You should have received a copy of the GNU General Public License
;;;; along with this program; if not, write to the Free Software
;;;; Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
;;;; USA.
;;;;
;;;;           Author: Erick Gallesio [eg@unice.fr]
;;;;    Creation date: 25-Oct-2020 20:22
;;;; Last file update: 25-Oct-2020 20:29 (eg)
;;;;

;;;; This code is an adaptation of the sample implementation gfiven in the
;;;; SRFI-61 document. It has the following copyright
;;;;
;;;; Permission is hereby granted, free of charge, to any person obtaining a
;;;; copy of this software and associated documentation files (the
;;;; "Software"), to deal in the Software without restriction, including
;;;; without limitation the rights to use, copy, modify, merge, publish,
;;;; distribute, sublicense, and/or sell copies of the Software, and to permit
;;;; persons to whom the Software is furnished to do so, subject to the
;;;; following conditions:
;;;;
;;;; The above copyright notice and this permission notice shall be included
;;;; in all copies or substantial portions of the Software.
;;;;
;;;; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
;;;; OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
;;;; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
;;;; NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
;;;; DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
;;;; OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
;;;; USE OR OTHER DEALINGS IN THE SOFTWARE.

(define-module SRFI-61

  (define-syntax cond
    (syntax-rules (=> else)

      ((cond (else else1 else2 ...))
       ;; The (if #t (begin ...)) wrapper ensures that there may be no
       ;; internal definitions in the body of the clause.  R5RS mandates
       ;; this in text (by referring to each subform of the clauses as
       ;; <expression>) but not in its reference implementation of cond,
       ;; which just expands to (begin ...) with no (if #t ...) wrapper.
       (if #t (begin else1 else2 ...)))

      ((cond (test => receiver) more-clause ...)
       (let ((t test))
         (%cond/maybe-more t
                          (receiver t)
                          more-clause ...)))

      ((cond (generator guard => receiver) more-clause ...)
       (call-with-values (lambda () generator)
         (lambda t
           (%cond/maybe-more (apply guard    t)
                            (apply receiver t)
                            more-clause ...))))

      ((cond (test) more-clause ...)
       (let ((t test))
         (%cond/maybe-more t t more-clause ...)))

      ((cond (test body1 body2 ...) more-clause ...)
       (%cond/maybe-more test
                        (begin body1 body2 ...)
                        more-clause ...))))

  (define-syntax %cond/maybe-more
    (syntax-rules ()
      ((%cond/maybe-more test consequent)
       (if test
           consequent))
      ((%cond/maybe-more test consequent clause ...)
       (if test
           consequent
           (cond clause ...)))))

  (export-syntax cond con/maybe-more))

(provide "srfi-61")
