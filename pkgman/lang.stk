;;;;
;;;; lang.stk	-- ScmPkg languages
;;;;
;;;; Copyright Â© 2007-2021 Erick Gallesio - I3S-CNRS/ESSI <eg@essi.fr>
;;;;
;;;;
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2 of the License, or
;;;; (at your option) any later version.
;;;;
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;;
;;;; You should have received a copy of the GNU General Public License
;;;; along with this program; if not, write to the Free Software
;;;; Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
;;;; USA.
;;;;
;;;;           Author: Erick Gallesio [eg@essi.fr]
;;;;    Creation date: 21-Mar-2007 14:31 (eg)
;;;; Last file update:  2-Apr-2021 15:31 (eg)
;;;;

(include "lang-bigloo.inc")
(include "lang-chicken.inc")
(include "lang-mzscheme.inc")

;; ----------------------------------------------------------------------
;;	lang-rewrite ...
;; ----------------------------------------------------------------------
(define (language-rewrite lang-lex)
  ;; Return the function in charge of language rewriting. This
  ;; function takes an analyzer as parameter
  (lambda (src dir)

    (define (do-rewrite in tmp)
      (with-output-to-file tmp
	    (lambda ()
	      (let ((lex (lang-lex in)))
	        (let loop ((token  (lexer-next-token lex)))
	          (unless (eq? token 'eof)
		        (display token)
		        (loop (lexer-next-token lex))))))))

    (when (file-exists? src)
      (let ((tmp (create-temp-file)))
	    (do-rewrite src tmp)
	    (copy-file tmp src)
	    (remove-file tmp)))))


;; ----------------------------------------------------------------------
;;	Languages rewriters
;; ----------------------------------------------------------------------
(add-rewriter! 'bigloo	 (language-rewrite lang-bigloo))
(add-rewriter! 'chicken  (language-rewrite lang-chicken))
(add-rewriter! 'gambit	 void)
(add-rewriter! 'mzscheme (language-rewrite lang-chicken))
(add-rewriter! 'r6rs	  void)
